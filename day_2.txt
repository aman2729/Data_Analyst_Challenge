-- Create department table
DROP TABLE IF EXISTS department;
CREATE TABLE department (
    Department_ID INT PRIMARY KEY,
    Department VARCHAR(50),
    Location_ID INT
);

-- Insert data into department table
INSERT INTO department (Department_ID, Department, Location_ID)
VALUES 
    (10, 'Accounting', 122),
    (20, 'Research', 124),
    (30, 'Sales', 123),
    (40, 'Operations', 167);


-- Create emp_fact table
DROP TABLE IF EXISTS emp_fact;
CREATE TABLE emp_fact (
    Employee_ID INT PRIMARY KEY,
    Emp_Name VARCHAR(50),
    Job_ID INT,
    Manager_ID INT,
    Hired_Date DATE,
    Salary DECIMAL(10, 2),
    Department_ID INT,
    FOREIGN KEY (Department_ID) REFERENCES department(Department_ID)
);

-- Insert data into emp_fact table
INSERT INTO emp_fact (Employee_ID, Emp_Name, Job_ID, Manager_ID, Hired_Date, Salary, Department_ID)
VALUES 
    (7369, 'John', 667, 7902, '2006-02-20', 800.00, 10),
    (7499, 'Kevin', 670, 7698, '2008-11-24', 1550.00, 20),
    (7505, 'Jean', 671, 7839, '2009-05-27', 2750.00, 30),
    (7506, 'Lynn', 671, 7839, '2007-09-27', 1550.00, 30),
    (7507, 'Chelsea', 670, 7110, '2014-09-14', 2200.00, 30),
    (7521, 'Leslie', 672, 7698, '2012-02-06', 1250.00, 30);

-- Create jobs table

DROP TABLE IF EXISTS jobs;
CREATE TABLE jobs (
    Job_ID INT PRIMARY KEY,
    Job_Role VARCHAR(50),
    Salary DECIMAL(10, 2)
);

-- Insert data into jobs table
INSERT INTO jobs (Job_ID, Job_Role, Salary)
VALUES 
    (667, 'Clerk', 800.00),
    (668, 'Staff', 1600.00),
    (669, 'Analyst', 2850.00),
    (670, 'Salesperson', 2200.00),
    (671, 'Manager', 3050.00),
    (672, 'President', 1250.00);


Q1)--Considering the below three tables, write a query that would:

i. List out the department wise maximum salary, minimum salary, average salary of the employees. 
ii. List out the department having at least four employees.
iii. Find out the employees who earn greater than the average salary for their department.

i.
select D.Department,
Max(E.Salary) as Max_Salary,
Min(E.Salary) as Min_Salary,
Avg(E.Salary) as Average_Salary
from Emp_fact as E
inner join Department as D
ON E.Department_ID=D.Department_ID
group by D.Department

ii.
select D.Department--count(*)--
from Emp_fact as E
inner join Department as D
ON E.Department_ID=D.Department_ID
group by D.Department
having count(*) >=4

iii.
SELECT 
    e1.employee_id,
    e1.emp_name,
    e1.salary,
    e1.department_id
FROM emp_fact as e1 
WHERE e1.salary > (SELECT
                    AVG(e2.salary)
                FROM emp_fact as e2
                WHERE e2.department_id = e1.department_id);



Q2)Given Monthly Sales Find the Cumulative total for each year
 
  Table Schema
  Year,Month,Total

  insert into Monthly_sales(Year,Month,Total)
  values
(2001,'Jan',10),
(2001,'Mar',12),
(2002,'Jun',20),
(2002,'Apr',15),
(2003,'May',30),
(2003,'Jun',25),
(2004,'Feb',40),
(2004,'Sept',10)

WITH YearlySales AS (
    SELECT 
        Year,
        SUM(Total) AS Total
    FROM 
        Monthly_sales
    GROUP BY 
        Year
),
CumulativeSales AS (
    SELECT 
        Year,
        Total,
        SUM(Total) OVER (ORDER BY Year) AS CumulativeTotal
    FROM 
        YearlySales
)
SELECT 
    Year,
    Total,
    CumulativeTotal
FROM 
    CumulativeSales;

Q3)
